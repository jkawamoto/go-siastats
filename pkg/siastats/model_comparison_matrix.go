/*
 * siastats.info API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2021-03-10
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package siastats

import (
	"encoding/json"
)

// ComparisonMatrix struct for ComparisonMatrix
type ComparisonMatrix struct {
	Stored        *int32   `json:"stored,omitempty"`
	Price         *float32 `json:"price,omitempty"`
	Collateral    *float32 `json:"collateral,omitempty"`
	Up            *float32 `json:"up,omitempty"`
	Down          *float32 `json:"down,omitempty"`
	ContractPrice *float32 `json:"contractPrice,omitempty"`
}

// NewComparisonMatrix instantiates a new ComparisonMatrix object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComparisonMatrix() *ComparisonMatrix {
	this := ComparisonMatrix{}
	return &this
}

// NewComparisonMatrixWithDefaults instantiates a new ComparisonMatrix object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComparisonMatrixWithDefaults() *ComparisonMatrix {
	this := ComparisonMatrix{}
	return &this
}

// GetStored returns the Stored field value if set, zero value otherwise.
func (o *ComparisonMatrix) GetStored() int32 {
	if o == nil || o.Stored == nil {
		var ret int32
		return ret
	}
	return *o.Stored
}

// GetStoredOk returns a tuple with the Stored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComparisonMatrix) GetStoredOk() (*int32, bool) {
	if o == nil || o.Stored == nil {
		return nil, false
	}
	return o.Stored, true
}

// HasStored returns a boolean if a field has been set.
func (o *ComparisonMatrix) HasStored() bool {
	if o != nil && o.Stored != nil {
		return true
	}

	return false
}

// SetStored gets a reference to the given int32 and assigns it to the Stored field.
func (o *ComparisonMatrix) SetStored(v int32) {
	o.Stored = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ComparisonMatrix) GetPrice() float32 {
	if o == nil || o.Price == nil {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComparisonMatrix) GetPriceOk() (*float32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ComparisonMatrix) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *ComparisonMatrix) SetPrice(v float32) {
	o.Price = &v
}

// GetCollateral returns the Collateral field value if set, zero value otherwise.
func (o *ComparisonMatrix) GetCollateral() float32 {
	if o == nil || o.Collateral == nil {
		var ret float32
		return ret
	}
	return *o.Collateral
}

// GetCollateralOk returns a tuple with the Collateral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComparisonMatrix) GetCollateralOk() (*float32, bool) {
	if o == nil || o.Collateral == nil {
		return nil, false
	}
	return o.Collateral, true
}

// HasCollateral returns a boolean if a field has been set.
func (o *ComparisonMatrix) HasCollateral() bool {
	if o != nil && o.Collateral != nil {
		return true
	}

	return false
}

// SetCollateral gets a reference to the given float32 and assigns it to the Collateral field.
func (o *ComparisonMatrix) SetCollateral(v float32) {
	o.Collateral = &v
}

// GetUp returns the Up field value if set, zero value otherwise.
func (o *ComparisonMatrix) GetUp() float32 {
	if o == nil || o.Up == nil {
		var ret float32
		return ret
	}
	return *o.Up
}

// GetUpOk returns a tuple with the Up field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComparisonMatrix) GetUpOk() (*float32, bool) {
	if o == nil || o.Up == nil {
		return nil, false
	}
	return o.Up, true
}

// HasUp returns a boolean if a field has been set.
func (o *ComparisonMatrix) HasUp() bool {
	if o != nil && o.Up != nil {
		return true
	}

	return false
}

// SetUp gets a reference to the given float32 and assigns it to the Up field.
func (o *ComparisonMatrix) SetUp(v float32) {
	o.Up = &v
}

// GetDown returns the Down field value if set, zero value otherwise.
func (o *ComparisonMatrix) GetDown() float32 {
	if o == nil || o.Down == nil {
		var ret float32
		return ret
	}
	return *o.Down
}

// GetDownOk returns a tuple with the Down field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComparisonMatrix) GetDownOk() (*float32, bool) {
	if o == nil || o.Down == nil {
		return nil, false
	}
	return o.Down, true
}

// HasDown returns a boolean if a field has been set.
func (o *ComparisonMatrix) HasDown() bool {
	if o != nil && o.Down != nil {
		return true
	}

	return false
}

// SetDown gets a reference to the given float32 and assigns it to the Down field.
func (o *ComparisonMatrix) SetDown(v float32) {
	o.Down = &v
}

// GetContractPrice returns the ContractPrice field value if set, zero value otherwise.
func (o *ComparisonMatrix) GetContractPrice() float32 {
	if o == nil || o.ContractPrice == nil {
		var ret float32
		return ret
	}
	return *o.ContractPrice
}

// GetContractPriceOk returns a tuple with the ContractPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComparisonMatrix) GetContractPriceOk() (*float32, bool) {
	if o == nil || o.ContractPrice == nil {
		return nil, false
	}
	return o.ContractPrice, true
}

// HasContractPrice returns a boolean if a field has been set.
func (o *ComparisonMatrix) HasContractPrice() bool {
	if o != nil && o.ContractPrice != nil {
		return true
	}

	return false
}

// SetContractPrice gets a reference to the given float32 and assigns it to the ContractPrice field.
func (o *ComparisonMatrix) SetContractPrice(v float32) {
	o.ContractPrice = &v
}

func (o ComparisonMatrix) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Stored != nil {
		toSerialize["stored"] = o.Stored
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Collateral != nil {
		toSerialize["collateral"] = o.Collateral
	}
	if o.Up != nil {
		toSerialize["up"] = o.Up
	}
	if o.Down != nil {
		toSerialize["down"] = o.Down
	}
	if o.ContractPrice != nil {
		toSerialize["contractPrice"] = o.ContractPrice
	}
	return json.Marshal(toSerialize)
}

type NullableComparisonMatrix struct {
	value *ComparisonMatrix
	isSet bool
}

func (v NullableComparisonMatrix) Get() *ComparisonMatrix {
	return v.value
}

func (v *NullableComparisonMatrix) Set(val *ComparisonMatrix) {
	v.value = val
	v.isSet = true
}

func (v NullableComparisonMatrix) IsSet() bool {
	return v.isSet
}

func (v *NullableComparisonMatrix) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComparisonMatrix(val *ComparisonMatrix) *NullableComparisonMatrix {
	return &NullableComparisonMatrix{value: val, isSet: true}
}

func (v NullableComparisonMatrix) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComparisonMatrix) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
