/*
 * siastats.info API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2021-03-10
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package siastats

import (
	"encoding/json"
)

// PlotBand struct for PlotBand
type PlotBand struct {
	Color *string        `json:"color,omitempty"`
	From  *int64         `json:"from,omitempty"`
	To    *int64         `json:"to,omitempty"`
	Label *PlotBandLabel `json:"label,omitempty"`
}

// NewPlotBand instantiates a new PlotBand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlotBand() *PlotBand {
	this := PlotBand{}
	return &this
}

// NewPlotBandWithDefaults instantiates a new PlotBand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlotBandWithDefaults() *PlotBand {
	this := PlotBand{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *PlotBand) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlotBand) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *PlotBand) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *PlotBand) SetColor(v string) {
	o.Color = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *PlotBand) GetFrom() int64 {
	if o == nil || o.From == nil {
		var ret int64
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlotBand) GetFromOk() (*int64, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *PlotBand) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int64 and assigns it to the From field.
func (o *PlotBand) SetFrom(v int64) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *PlotBand) GetTo() int64 {
	if o == nil || o.To == nil {
		var ret int64
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlotBand) GetToOk() (*int64, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *PlotBand) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given int64 and assigns it to the To field.
func (o *PlotBand) SetTo(v int64) {
	o.To = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PlotBand) GetLabel() PlotBandLabel {
	if o == nil || o.Label == nil {
		var ret PlotBandLabel
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlotBand) GetLabelOk() (*PlotBandLabel, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PlotBand) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given PlotBandLabel and assigns it to the Label field.
func (o *PlotBand) SetLabel(v PlotBandLabel) {
	o.Label = &v
}

func (o PlotBand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullablePlotBand struct {
	value *PlotBand
	isSet bool
}

func (v NullablePlotBand) Get() *PlotBand {
	return v.value
}

func (v *NullablePlotBand) Set(val *PlotBand) {
	v.value = val
	v.isSet = true
}

func (v NullablePlotBand) IsSet() bool {
	return v.isSet
}

func (v *NullablePlotBand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlotBand(val *PlotBand) *NullablePlotBand {
	return &NullablePlotBand{value: val, isSet: true}
}

func (v NullablePlotBand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlotBand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
