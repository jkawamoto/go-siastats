/*
 * siastats.info API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2019-10-03
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package siastats

import (
	"encoding/json"
)

// Host struct for Host
type Host struct {
	Id                 *float32 `json:"Id,omitempty"`
	Online             *bool    `json:"Online,omitempty"`
	Pubkey             *string  `json:"Pubkey,omitempty"`
	CurrentIp          *string  `json:"CurrentIp,omitempty"`
	CountryCode        *string  `json:"CountryCode,omitempty"`
	TotalStorage       *float32 `json:"TotalStorage,omitempty"`
	AcceptingContracts *bool    `json:"AcceptingContracts,omitempty"`
	Version            *string  `json:"Version,omitempty"`
	UsedStorage        *float32 `json:"UsedStorage,omitempty"`
	Collateral         *int32   `json:"Collateral,omitempty"`
	ContractPrice      *int32   `json:"ContractPrice,omitempty"`
	StoragePrice       *int32   `json:"StoragePrice,omitempty"`
	UploadPrice        *int32   `json:"UploadPrice,omitempty"`
	DownloadPrice      *int32   `json:"DownloadPrice,omitempty"`
	Rank               *int32   `json:"Rank,omitempty"`
	FinalScore         *int32   `json:"FinalScore,omitempty"`
	ErrorType          *string  `json:"ErrorType,omitempty"`
}

// NewHost instantiates a new Host object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHost() *Host {
	this := Host{}
	return &this
}

// NewHostWithDefaults instantiates a new Host object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostWithDefaults() *Host {
	this := Host{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Host) GetId() float32 {
	if o == nil || o.Id == nil {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetIdOk() (*float32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Host) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *Host) SetId(v float32) {
	o.Id = &v
}

// GetOnline returns the Online field value if set, zero value otherwise.
func (o *Host) GetOnline() bool {
	if o == nil || o.Online == nil {
		var ret bool
		return ret
	}
	return *o.Online
}

// GetOnlineOk returns a tuple with the Online field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOnlineOk() (*bool, bool) {
	if o == nil || o.Online == nil {
		return nil, false
	}
	return o.Online, true
}

// HasOnline returns a boolean if a field has been set.
func (o *Host) HasOnline() bool {
	if o != nil && o.Online != nil {
		return true
	}

	return false
}

// SetOnline gets a reference to the given bool and assigns it to the Online field.
func (o *Host) SetOnline(v bool) {
	o.Online = &v
}

// GetPubkey returns the Pubkey field value if set, zero value otherwise.
func (o *Host) GetPubkey() string {
	if o == nil || o.Pubkey == nil {
		var ret string
		return ret
	}
	return *o.Pubkey
}

// GetPubkeyOk returns a tuple with the Pubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetPubkeyOk() (*string, bool) {
	if o == nil || o.Pubkey == nil {
		return nil, false
	}
	return o.Pubkey, true
}

// HasPubkey returns a boolean if a field has been set.
func (o *Host) HasPubkey() bool {
	if o != nil && o.Pubkey != nil {
		return true
	}

	return false
}

// SetPubkey gets a reference to the given string and assigns it to the Pubkey field.
func (o *Host) SetPubkey(v string) {
	o.Pubkey = &v
}

// GetCurrentIp returns the CurrentIp field value if set, zero value otherwise.
func (o *Host) GetCurrentIp() string {
	if o == nil || o.CurrentIp == nil {
		var ret string
		return ret
	}
	return *o.CurrentIp
}

// GetCurrentIpOk returns a tuple with the CurrentIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetCurrentIpOk() (*string, bool) {
	if o == nil || o.CurrentIp == nil {
		return nil, false
	}
	return o.CurrentIp, true
}

// HasCurrentIp returns a boolean if a field has been set.
func (o *Host) HasCurrentIp() bool {
	if o != nil && o.CurrentIp != nil {
		return true
	}

	return false
}

// SetCurrentIp gets a reference to the given string and assigns it to the CurrentIp field.
func (o *Host) SetCurrentIp(v string) {
	o.CurrentIp = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *Host) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *Host) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *Host) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetTotalStorage returns the TotalStorage field value if set, zero value otherwise.
func (o *Host) GetTotalStorage() float32 {
	if o == nil || o.TotalStorage == nil {
		var ret float32
		return ret
	}
	return *o.TotalStorage
}

// GetTotalStorageOk returns a tuple with the TotalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetTotalStorageOk() (*float32, bool) {
	if o == nil || o.TotalStorage == nil {
		return nil, false
	}
	return o.TotalStorage, true
}

// HasTotalStorage returns a boolean if a field has been set.
func (o *Host) HasTotalStorage() bool {
	if o != nil && o.TotalStorage != nil {
		return true
	}

	return false
}

// SetTotalStorage gets a reference to the given float32 and assigns it to the TotalStorage field.
func (o *Host) SetTotalStorage(v float32) {
	o.TotalStorage = &v
}

// GetAcceptingContracts returns the AcceptingContracts field value if set, zero value otherwise.
func (o *Host) GetAcceptingContracts() bool {
	if o == nil || o.AcceptingContracts == nil {
		var ret bool
		return ret
	}
	return *o.AcceptingContracts
}

// GetAcceptingContractsOk returns a tuple with the AcceptingContracts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAcceptingContractsOk() (*bool, bool) {
	if o == nil || o.AcceptingContracts == nil {
		return nil, false
	}
	return o.AcceptingContracts, true
}

// HasAcceptingContracts returns a boolean if a field has been set.
func (o *Host) HasAcceptingContracts() bool {
	if o != nil && o.AcceptingContracts != nil {
		return true
	}

	return false
}

// SetAcceptingContracts gets a reference to the given bool and assigns it to the AcceptingContracts field.
func (o *Host) SetAcceptingContracts(v bool) {
	o.AcceptingContracts = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Host) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Host) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Host) SetVersion(v string) {
	o.Version = &v
}

// GetUsedStorage returns the UsedStorage field value if set, zero value otherwise.
func (o *Host) GetUsedStorage() float32 {
	if o == nil || o.UsedStorage == nil {
		var ret float32
		return ret
	}
	return *o.UsedStorage
}

// GetUsedStorageOk returns a tuple with the UsedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetUsedStorageOk() (*float32, bool) {
	if o == nil || o.UsedStorage == nil {
		return nil, false
	}
	return o.UsedStorage, true
}

// HasUsedStorage returns a boolean if a field has been set.
func (o *Host) HasUsedStorage() bool {
	if o != nil && o.UsedStorage != nil {
		return true
	}

	return false
}

// SetUsedStorage gets a reference to the given float32 and assigns it to the UsedStorage field.
func (o *Host) SetUsedStorage(v float32) {
	o.UsedStorage = &v
}

// GetCollateral returns the Collateral field value if set, zero value otherwise.
func (o *Host) GetCollateral() int32 {
	if o == nil || o.Collateral == nil {
		var ret int32
		return ret
	}
	return *o.Collateral
}

// GetCollateralOk returns a tuple with the Collateral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetCollateralOk() (*int32, bool) {
	if o == nil || o.Collateral == nil {
		return nil, false
	}
	return o.Collateral, true
}

// HasCollateral returns a boolean if a field has been set.
func (o *Host) HasCollateral() bool {
	if o != nil && o.Collateral != nil {
		return true
	}

	return false
}

// SetCollateral gets a reference to the given int32 and assigns it to the Collateral field.
func (o *Host) SetCollateral(v int32) {
	o.Collateral = &v
}

// GetContractPrice returns the ContractPrice field value if set, zero value otherwise.
func (o *Host) GetContractPrice() int32 {
	if o == nil || o.ContractPrice == nil {
		var ret int32
		return ret
	}
	return *o.ContractPrice
}

// GetContractPriceOk returns a tuple with the ContractPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetContractPriceOk() (*int32, bool) {
	if o == nil || o.ContractPrice == nil {
		return nil, false
	}
	return o.ContractPrice, true
}

// HasContractPrice returns a boolean if a field has been set.
func (o *Host) HasContractPrice() bool {
	if o != nil && o.ContractPrice != nil {
		return true
	}

	return false
}

// SetContractPrice gets a reference to the given int32 and assigns it to the ContractPrice field.
func (o *Host) SetContractPrice(v int32) {
	o.ContractPrice = &v
}

// GetStoragePrice returns the StoragePrice field value if set, zero value otherwise.
func (o *Host) GetStoragePrice() int32 {
	if o == nil || o.StoragePrice == nil {
		var ret int32
		return ret
	}
	return *o.StoragePrice
}

// GetStoragePriceOk returns a tuple with the StoragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetStoragePriceOk() (*int32, bool) {
	if o == nil || o.StoragePrice == nil {
		return nil, false
	}
	return o.StoragePrice, true
}

// HasStoragePrice returns a boolean if a field has been set.
func (o *Host) HasStoragePrice() bool {
	if o != nil && o.StoragePrice != nil {
		return true
	}

	return false
}

// SetStoragePrice gets a reference to the given int32 and assigns it to the StoragePrice field.
func (o *Host) SetStoragePrice(v int32) {
	o.StoragePrice = &v
}

// GetUploadPrice returns the UploadPrice field value if set, zero value otherwise.
func (o *Host) GetUploadPrice() int32 {
	if o == nil || o.UploadPrice == nil {
		var ret int32
		return ret
	}
	return *o.UploadPrice
}

// GetUploadPriceOk returns a tuple with the UploadPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetUploadPriceOk() (*int32, bool) {
	if o == nil || o.UploadPrice == nil {
		return nil, false
	}
	return o.UploadPrice, true
}

// HasUploadPrice returns a boolean if a field has been set.
func (o *Host) HasUploadPrice() bool {
	if o != nil && o.UploadPrice != nil {
		return true
	}

	return false
}

// SetUploadPrice gets a reference to the given int32 and assigns it to the UploadPrice field.
func (o *Host) SetUploadPrice(v int32) {
	o.UploadPrice = &v
}

// GetDownloadPrice returns the DownloadPrice field value if set, zero value otherwise.
func (o *Host) GetDownloadPrice() int32 {
	if o == nil || o.DownloadPrice == nil {
		var ret int32
		return ret
	}
	return *o.DownloadPrice
}

// GetDownloadPriceOk returns a tuple with the DownloadPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetDownloadPriceOk() (*int32, bool) {
	if o == nil || o.DownloadPrice == nil {
		return nil, false
	}
	return o.DownloadPrice, true
}

// HasDownloadPrice returns a boolean if a field has been set.
func (o *Host) HasDownloadPrice() bool {
	if o != nil && o.DownloadPrice != nil {
		return true
	}

	return false
}

// SetDownloadPrice gets a reference to the given int32 and assigns it to the DownloadPrice field.
func (o *Host) SetDownloadPrice(v int32) {
	o.DownloadPrice = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *Host) GetRank() int32 {
	if o == nil || o.Rank == nil {
		var ret int32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetRankOk() (*int32, bool) {
	if o == nil || o.Rank == nil {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *Host) HasRank() bool {
	if o != nil && o.Rank != nil {
		return true
	}

	return false
}

// SetRank gets a reference to the given int32 and assigns it to the Rank field.
func (o *Host) SetRank(v int32) {
	o.Rank = &v
}

// GetFinalScore returns the FinalScore field value if set, zero value otherwise.
func (o *Host) GetFinalScore() int32 {
	if o == nil || o.FinalScore == nil {
		var ret int32
		return ret
	}
	return *o.FinalScore
}

// GetFinalScoreOk returns a tuple with the FinalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetFinalScoreOk() (*int32, bool) {
	if o == nil || o.FinalScore == nil {
		return nil, false
	}
	return o.FinalScore, true
}

// HasFinalScore returns a boolean if a field has been set.
func (o *Host) HasFinalScore() bool {
	if o != nil && o.FinalScore != nil {
		return true
	}

	return false
}

// SetFinalScore gets a reference to the given int32 and assigns it to the FinalScore field.
func (o *Host) SetFinalScore(v int32) {
	o.FinalScore = &v
}

// GetErrorType returns the ErrorType field value if set, zero value otherwise.
func (o *Host) GetErrorType() string {
	if o == nil || o.ErrorType == nil {
		var ret string
		return ret
	}
	return *o.ErrorType
}

// GetErrorTypeOk returns a tuple with the ErrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetErrorTypeOk() (*string, bool) {
	if o == nil || o.ErrorType == nil {
		return nil, false
	}
	return o.ErrorType, true
}

// HasErrorType returns a boolean if a field has been set.
func (o *Host) HasErrorType() bool {
	if o != nil && o.ErrorType != nil {
		return true
	}

	return false
}

// SetErrorType gets a reference to the given string and assigns it to the ErrorType field.
func (o *Host) SetErrorType(v string) {
	o.ErrorType = &v
}

func (o Host) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["Id"] = o.Id
	}
	if o.Online != nil {
		toSerialize["Online"] = o.Online
	}
	if o.Pubkey != nil {
		toSerialize["Pubkey"] = o.Pubkey
	}
	if o.CurrentIp != nil {
		toSerialize["CurrentIp"] = o.CurrentIp
	}
	if o.CountryCode != nil {
		toSerialize["CountryCode"] = o.CountryCode
	}
	if o.TotalStorage != nil {
		toSerialize["TotalStorage"] = o.TotalStorage
	}
	if o.AcceptingContracts != nil {
		toSerialize["AcceptingContracts"] = o.AcceptingContracts
	}
	if o.Version != nil {
		toSerialize["Version"] = o.Version
	}
	if o.UsedStorage != nil {
		toSerialize["UsedStorage"] = o.UsedStorage
	}
	if o.Collateral != nil {
		toSerialize["Collateral"] = o.Collateral
	}
	if o.ContractPrice != nil {
		toSerialize["ContractPrice"] = o.ContractPrice
	}
	if o.StoragePrice != nil {
		toSerialize["StoragePrice"] = o.StoragePrice
	}
	if o.UploadPrice != nil {
		toSerialize["UploadPrice"] = o.UploadPrice
	}
	if o.DownloadPrice != nil {
		toSerialize["DownloadPrice"] = o.DownloadPrice
	}
	if o.Rank != nil {
		toSerialize["Rank"] = o.Rank
	}
	if o.FinalScore != nil {
		toSerialize["FinalScore"] = o.FinalScore
	}
	if o.ErrorType != nil {
		toSerialize["ErrorType"] = o.ErrorType
	}
	return json.Marshal(toSerialize)
}

type NullableHost struct {
	value *Host
	isSet bool
}

func (v NullableHost) Get() *Host {
	return v.value
}

func (v *NullableHost) Set(val *Host) {
	v.value = val
	v.isSet = true
}

func (v NullableHost) IsSet() bool {
	return v.isSet
}

func (v *NullableHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHost(val *Host) *NullableHost {
	return &NullableHost{value: val, isSet: true}
}

func (v NullableHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
