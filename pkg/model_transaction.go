/*
 * siastats.info API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2019-10-03
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package siastats

import (
	"encoding/json"
)

// Transaction struct for Transaction
type Transaction struct {
	MasterHash *string  `json:"MasterHash,omitempty"`
	ScChange   *float64 `json:"ScChange,omitempty"`
	SfChange   *float32 `json:"SfChange,omitempty"`
	Height     *int32   `json:"Height,omitempty"`
	Timestamp  *string  `json:"Timestamp,omitempty"`
	TxType     *string  `json:"TxType,omitempty"`
}

// NewTransaction instantiates a new Transaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransaction() *Transaction {
	this := Transaction{}
	return &this
}

// NewTransactionWithDefaults instantiates a new Transaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionWithDefaults() *Transaction {
	this := Transaction{}
	return &this
}

// GetMasterHash returns the MasterHash field value if set, zero value otherwise.
func (o *Transaction) GetMasterHash() string {
	if o == nil || o.MasterHash == nil {
		var ret string
		return ret
	}
	return *o.MasterHash
}

// GetMasterHashOk returns a tuple with the MasterHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transaction) GetMasterHashOk() (*string, bool) {
	if o == nil || o.MasterHash == nil {
		return nil, false
	}
	return o.MasterHash, true
}

// HasMasterHash returns a boolean if a field has been set.
func (o *Transaction) HasMasterHash() bool {
	if o != nil && o.MasterHash != nil {
		return true
	}

	return false
}

// SetMasterHash gets a reference to the given string and assigns it to the MasterHash field.
func (o *Transaction) SetMasterHash(v string) {
	o.MasterHash = &v
}

// GetScChange returns the ScChange field value if set, zero value otherwise.
func (o *Transaction) GetScChange() float64 {
	if o == nil || o.ScChange == nil {
		var ret float64
		return ret
	}
	return *o.ScChange
}

// GetScChangeOk returns a tuple with the ScChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transaction) GetScChangeOk() (*float64, bool) {
	if o == nil || o.ScChange == nil {
		return nil, false
	}
	return o.ScChange, true
}

// HasScChange returns a boolean if a field has been set.
func (o *Transaction) HasScChange() bool {
	if o != nil && o.ScChange != nil {
		return true
	}

	return false
}

// SetScChange gets a reference to the given float64 and assigns it to the ScChange field.
func (o *Transaction) SetScChange(v float64) {
	o.ScChange = &v
}

// GetSfChange returns the SfChange field value if set, zero value otherwise.
func (o *Transaction) GetSfChange() float32 {
	if o == nil || o.SfChange == nil {
		var ret float32
		return ret
	}
	return *o.SfChange
}

// GetSfChangeOk returns a tuple with the SfChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transaction) GetSfChangeOk() (*float32, bool) {
	if o == nil || o.SfChange == nil {
		return nil, false
	}
	return o.SfChange, true
}

// HasSfChange returns a boolean if a field has been set.
func (o *Transaction) HasSfChange() bool {
	if o != nil && o.SfChange != nil {
		return true
	}

	return false
}

// SetSfChange gets a reference to the given float32 and assigns it to the SfChange field.
func (o *Transaction) SetSfChange(v float32) {
	o.SfChange = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *Transaction) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transaction) GetHeightOk() (*int32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *Transaction) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *Transaction) SetHeight(v int32) {
	o.Height = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *Transaction) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transaction) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *Transaction) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *Transaction) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetTxType returns the TxType field value if set, zero value otherwise.
func (o *Transaction) GetTxType() string {
	if o == nil || o.TxType == nil {
		var ret string
		return ret
	}
	return *o.TxType
}

// GetTxTypeOk returns a tuple with the TxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transaction) GetTxTypeOk() (*string, bool) {
	if o == nil || o.TxType == nil {
		return nil, false
	}
	return o.TxType, true
}

// HasTxType returns a boolean if a field has been set.
func (o *Transaction) HasTxType() bool {
	if o != nil && o.TxType != nil {
		return true
	}

	return false
}

// SetTxType gets a reference to the given string and assigns it to the TxType field.
func (o *Transaction) SetTxType(v string) {
	o.TxType = &v
}

func (o Transaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MasterHash != nil {
		toSerialize["MasterHash"] = o.MasterHash
	}
	if o.ScChange != nil {
		toSerialize["ScChange"] = o.ScChange
	}
	if o.SfChange != nil {
		toSerialize["SfChange"] = o.SfChange
	}
	if o.Height != nil {
		toSerialize["Height"] = o.Height
	}
	if o.Timestamp != nil {
		toSerialize["Timestamp"] = o.Timestamp
	}
	if o.TxType != nil {
		toSerialize["TxType"] = o.TxType
	}
	return json.Marshal(toSerialize)
}

type NullableTransaction struct {
	value *Transaction
	isSet bool
}

func (v NullableTransaction) Get() *Transaction {
	return v.value
}

func (v *NullableTransaction) Set(val *Transaction) {
	v.value = val
	v.isSet = true
}

func (v NullableTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransaction(val *Transaction) *NullableTransaction {
	return &NullableTransaction{value: val, isSet: true}
}

func (v NullableTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
