/*
 * siastats.info API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2019-10-03
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package siastats

import (
	"encoding/json"
)

// HashResponse struct for HashResponse
type HashResponse struct {
	Type                *string        `json:"Type,omitempty"`
	MasterHash          *string        `json:"MasterHash,omitempty"`
	BalanceSc           *float64       `json:"balanceSc,omitempty"`
	ReceivedSc          *float64       `json:"receivedSc,omitempty"`
	SentSc              *float64       `json:"sentSc,omitempty"`
	BalanceSf           *float32       `json:"balanceSf,omitempty"`
	TotalTxCount        *int32         `json:"TotalTxCount,omitempty"`
	FirstSeen           *int32         `json:"firstSeen,omitempty"`
	Last100Transactions *[]Transaction `json:"last100Transactions,omitempty"`
}

// NewHashResponse instantiates a new HashResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHashResponse() *HashResponse {
	this := HashResponse{}
	return &this
}

// NewHashResponseWithDefaults instantiates a new HashResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHashResponseWithDefaults() *HashResponse {
	this := HashResponse{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HashResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HashResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *HashResponse) SetType(v string) {
	o.Type = &v
}

// GetMasterHash returns the MasterHash field value if set, zero value otherwise.
func (o *HashResponse) GetMasterHash() string {
	if o == nil || o.MasterHash == nil {
		var ret string
		return ret
	}
	return *o.MasterHash
}

// GetMasterHashOk returns a tuple with the MasterHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetMasterHashOk() (*string, bool) {
	if o == nil || o.MasterHash == nil {
		return nil, false
	}
	return o.MasterHash, true
}

// HasMasterHash returns a boolean if a field has been set.
func (o *HashResponse) HasMasterHash() bool {
	if o != nil && o.MasterHash != nil {
		return true
	}

	return false
}

// SetMasterHash gets a reference to the given string and assigns it to the MasterHash field.
func (o *HashResponse) SetMasterHash(v string) {
	o.MasterHash = &v
}

// GetBalanceSc returns the BalanceSc field value if set, zero value otherwise.
func (o *HashResponse) GetBalanceSc() float64 {
	if o == nil || o.BalanceSc == nil {
		var ret float64
		return ret
	}
	return *o.BalanceSc
}

// GetBalanceScOk returns a tuple with the BalanceSc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetBalanceScOk() (*float64, bool) {
	if o == nil || o.BalanceSc == nil {
		return nil, false
	}
	return o.BalanceSc, true
}

// HasBalanceSc returns a boolean if a field has been set.
func (o *HashResponse) HasBalanceSc() bool {
	if o != nil && o.BalanceSc != nil {
		return true
	}

	return false
}

// SetBalanceSc gets a reference to the given float64 and assigns it to the BalanceSc field.
func (o *HashResponse) SetBalanceSc(v float64) {
	o.BalanceSc = &v
}

// GetReceivedSc returns the ReceivedSc field value if set, zero value otherwise.
func (o *HashResponse) GetReceivedSc() float64 {
	if o == nil || o.ReceivedSc == nil {
		var ret float64
		return ret
	}
	return *o.ReceivedSc
}

// GetReceivedScOk returns a tuple with the ReceivedSc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetReceivedScOk() (*float64, bool) {
	if o == nil || o.ReceivedSc == nil {
		return nil, false
	}
	return o.ReceivedSc, true
}

// HasReceivedSc returns a boolean if a field has been set.
func (o *HashResponse) HasReceivedSc() bool {
	if o != nil && o.ReceivedSc != nil {
		return true
	}

	return false
}

// SetReceivedSc gets a reference to the given float64 and assigns it to the ReceivedSc field.
func (o *HashResponse) SetReceivedSc(v float64) {
	o.ReceivedSc = &v
}

// GetSentSc returns the SentSc field value if set, zero value otherwise.
func (o *HashResponse) GetSentSc() float64 {
	if o == nil || o.SentSc == nil {
		var ret float64
		return ret
	}
	return *o.SentSc
}

// GetSentScOk returns a tuple with the SentSc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetSentScOk() (*float64, bool) {
	if o == nil || o.SentSc == nil {
		return nil, false
	}
	return o.SentSc, true
}

// HasSentSc returns a boolean if a field has been set.
func (o *HashResponse) HasSentSc() bool {
	if o != nil && o.SentSc != nil {
		return true
	}

	return false
}

// SetSentSc gets a reference to the given float64 and assigns it to the SentSc field.
func (o *HashResponse) SetSentSc(v float64) {
	o.SentSc = &v
}

// GetBalanceSf returns the BalanceSf field value if set, zero value otherwise.
func (o *HashResponse) GetBalanceSf() float32 {
	if o == nil || o.BalanceSf == nil {
		var ret float32
		return ret
	}
	return *o.BalanceSf
}

// GetBalanceSfOk returns a tuple with the BalanceSf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetBalanceSfOk() (*float32, bool) {
	if o == nil || o.BalanceSf == nil {
		return nil, false
	}
	return o.BalanceSf, true
}

// HasBalanceSf returns a boolean if a field has been set.
func (o *HashResponse) HasBalanceSf() bool {
	if o != nil && o.BalanceSf != nil {
		return true
	}

	return false
}

// SetBalanceSf gets a reference to the given float32 and assigns it to the BalanceSf field.
func (o *HashResponse) SetBalanceSf(v float32) {
	o.BalanceSf = &v
}

// GetTotalTxCount returns the TotalTxCount field value if set, zero value otherwise.
func (o *HashResponse) GetTotalTxCount() int32 {
	if o == nil || o.TotalTxCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalTxCount
}

// GetTotalTxCountOk returns a tuple with the TotalTxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetTotalTxCountOk() (*int32, bool) {
	if o == nil || o.TotalTxCount == nil {
		return nil, false
	}
	return o.TotalTxCount, true
}

// HasTotalTxCount returns a boolean if a field has been set.
func (o *HashResponse) HasTotalTxCount() bool {
	if o != nil && o.TotalTxCount != nil {
		return true
	}

	return false
}

// SetTotalTxCount gets a reference to the given int32 and assigns it to the TotalTxCount field.
func (o *HashResponse) SetTotalTxCount(v int32) {
	o.TotalTxCount = &v
}

// GetFirstSeen returns the FirstSeen field value if set, zero value otherwise.
func (o *HashResponse) GetFirstSeen() int32 {
	if o == nil || o.FirstSeen == nil {
		var ret int32
		return ret
	}
	return *o.FirstSeen
}

// GetFirstSeenOk returns a tuple with the FirstSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetFirstSeenOk() (*int32, bool) {
	if o == nil || o.FirstSeen == nil {
		return nil, false
	}
	return o.FirstSeen, true
}

// HasFirstSeen returns a boolean if a field has been set.
func (o *HashResponse) HasFirstSeen() bool {
	if o != nil && o.FirstSeen != nil {
		return true
	}

	return false
}

// SetFirstSeen gets a reference to the given int32 and assigns it to the FirstSeen field.
func (o *HashResponse) SetFirstSeen(v int32) {
	o.FirstSeen = &v
}

// GetLast100Transactions returns the Last100Transactions field value if set, zero value otherwise.
func (o *HashResponse) GetLast100Transactions() []Transaction {
	if o == nil || o.Last100Transactions == nil {
		var ret []Transaction
		return ret
	}
	return *o.Last100Transactions
}

// GetLast100TransactionsOk returns a tuple with the Last100Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashResponse) GetLast100TransactionsOk() (*[]Transaction, bool) {
	if o == nil || o.Last100Transactions == nil {
		return nil, false
	}
	return o.Last100Transactions, true
}

// HasLast100Transactions returns a boolean if a field has been set.
func (o *HashResponse) HasLast100Transactions() bool {
	if o != nil && o.Last100Transactions != nil {
		return true
	}

	return false
}

// SetLast100Transactions gets a reference to the given []Transaction and assigns it to the Last100Transactions field.
func (o *HashResponse) SetLast100Transactions(v []Transaction) {
	o.Last100Transactions = &v
}

func (o HashResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	if o.MasterHash != nil {
		toSerialize["MasterHash"] = o.MasterHash
	}
	if o.BalanceSc != nil {
		toSerialize["balanceSc"] = o.BalanceSc
	}
	if o.ReceivedSc != nil {
		toSerialize["receivedSc"] = o.ReceivedSc
	}
	if o.SentSc != nil {
		toSerialize["sentSc"] = o.SentSc
	}
	if o.BalanceSf != nil {
		toSerialize["balanceSf"] = o.BalanceSf
	}
	if o.TotalTxCount != nil {
		toSerialize["TotalTxCount"] = o.TotalTxCount
	}
	if o.FirstSeen != nil {
		toSerialize["firstSeen"] = o.FirstSeen
	}
	if o.Last100Transactions != nil {
		toSerialize["last100Transactions"] = o.Last100Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableHashResponse struct {
	value *HashResponse
	isSet bool
}

func (v NullableHashResponse) Get() *HashResponse {
	return v.value
}

func (v *NullableHashResponse) Set(val *HashResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHashResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHashResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHashResponse(val *HashResponse) *NullableHashResponse {
	return &NullableHashResponse{value: val, isSet: true}
}

func (v NullableHashResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHashResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
